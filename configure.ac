dnl initialize the name of the program
AC_INIT([minapp],[0.0.1])

dnl set APP_ID to use it along all the subdir makefiles
AC_SUBST([APP_ID],[org.Minapp])

dnl just copy paste it I guess
AC_CONFIG_MACRO_DIR([m4])
AC_CONFIG_AUX_DIR([build-aux])

m4_ifdef([AM_SILENT_RULES],[AM_SILENT_RULES([yes])])

AM_INIT_AUTOMAKE([1.11 dist-xz no-dist-gzip tar-ustar foreign subdir-objects])
AM_MAINTAINER_MODE([enable])
dnl end of just copy paste it I guess I dont understand what the hell this does
dnl actually I dont understand half of all of this thing I just want my application
dnl to build with the usual things it should support like gsettings, gresources,
dnl translations, idk just the basics cmon.

dnl search for a cc compiler, even if you don't do it in C and idk why
AC_PROG_CC

dnl translations support
GETTEXT_PACKAGE=AC_PACKAGE_NAME
AC_SUBST(GETTEXT_PACKAGE)
IT_PROG_INTLTOOL([0.50.0])
dnl end translations support

dnl Initialize libtool
AM_PROG_AR
LT_PREREQ([2.2])
LT_INIT([disable-static])

dnl initialize gsettings generation support
GLIB_GSETTINGS

dnl require some library requirements like gtk+ etc.
PKG_CHECK_MODULES(MINAPP,
                  gtk+-3.0
                  gio-2.0 >= 2.43.4);

dnl set the command line utility for generating gresources
GLIB_COMPILE_RESOURCES=`$PKG_CONFIG --variable=glib_compile_resources gio-2.0`
AC_SUBST(GLIB_COMPILE_RESOURCES)

dnl all the makefiles
dnl the po/Makefile.in is autogenerated by intltool, so you have to just put this here and
dnl that's it
AC_CONFIG_FILES([
Makefile
data/Makefile
po/Makefile.in
src/Makefile
])

AC_OUTPUT
